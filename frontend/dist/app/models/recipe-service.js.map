{"version":3,"sources":["models/recipe-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,uBAAuB,UAAU,CAAC,CAAA;AAClC,2BAA2B,cAAc,CAAC,CAAA;AAG1C;IAMI;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,4BAAI,GAAJ;QACI,0BAA0B;QAC1B,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAC,MAAM,EAAC,MAAM,CAAC,CAAC;QAE1C,IAAI,IAAI,GAAG,IAAI,uBAAU,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,IAAI,GAAG,IAAI,uBAAU,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG;YACX,IAAI,eAAM,CAAC,CAAC,EAAC,UAAU,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,IAAI,EAAC,IAAI,CAAC,EAAC,GAAG,EAAC,CAAC,OAAO,CAAC,CAAC;YACtF,IAAI,eAAM,CAAC,CAAC,EAAC,OAAO,EAAC,YAAY,EAAE,sBAAsB,EAAC,CAAC,IAAI,EAAC,IAAI,CAAC,EAAC,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC;YACjF,IAAI,eAAM,CAAC,CAAC,EAAC,oBAAoB,EAAC,0BAA0B,EAAE,+BAA+B,EAAC,CAAC,IAAI,EAAC,IAAI,CAAC,EAAC,GAAG,EAAC,CAAC,MAAM,CAAC,CAAC;YACvH,IAAI,eAAM,CAAC,CAAC,EAAC,OAAO,EAAC,aAAa,EAAE,sDAAsD,EAAC,CAAC,IAAI,EAAC,IAAI,CAAC,EAAC,GAAG,EAAC,CAAC,OAAO,CAAC,CAAC;YACrH,IAAI,eAAM,CAAC,CAAC,EAAC,UAAU,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC,IAAI,EAAC,IAAI,CAAC,EAAC,GAAG,EAAC,CAAC,MAAM,CAAC,CAAC;SACxF,CAAC;IACN,CAAC;IAED,kCAAU,GAAV;QACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,iCAAS,GAAT,UAAU,GAAU,EAAE,KAAY,EAAE,WAAkB,EAAE,WAAkB,EAAE,WAAwB,EAAC,UAAmB;QACpH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,eAAM,CAAC,GAAG,EAAC,KAAK,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,CAAC,EAAC,UAAU,CAAC,CAAC,CAAA;IAC7F,CAAC;IACD,iCAAS,GAAT,UAAU,GAAU;QAChB,GAAG,CAAA,CAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,CAAC;YAA3B,IAAI,MAAM,SAAA;YACV,EAAE,CAAA,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAA,CAAC;gBAClB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACnC,CAAC;SACJ;QACD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAa,GAAb;QACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IACD,yCAAiB,GAAjB,UAAkB,QAAgB;QAC9B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IACnC,CAAC;IACD,yCAAiB,GAAjB;QACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAChD,CAAC;IAlDL;QAAC,iBAAU,EAAE;;qBAAA;IAoDb,oBAAC;AAAD,CAnDA,AAmDC,IAAA;AAnDY,qBAAa,gBAmDzB,CAAA","file":"recipe-service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Recipe } from \"./recipe\";\r\nimport { Ingredient } from \"./ingredient\";\r\n\r\n@Injectable()\r\nexport class RecipeService {\r\n\r\n    recipes: Recipe[];\r\n    categories: string[];\r\n    activeCategory: string;\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        //just mocked data for now\r\n        this.categories = [\"Vegan\",\"Fish\",\"Meat\"];\r\n\r\n        let ing1 = new Ingredient(\"ketchup\",\"1l\");\r\n        let ing2 = new Ingredient(\"nudln\",\"100g\");\r\n        this.recipes = [\r\n            new Recipe(1,\"Spagetti\",\"spagettiiiis\", \"nudln mit Ketchup\",[ing1,ing2],3.8,[\"Vegan\"]),\r\n            new Recipe(2,\"Steak\",\"Beef Stake\", \"well done beef stake\",[ing1,ing2],4,[\"Meat\"]),\r\n            new Recipe(3,\"Spagetti Bolognese\",\"spagettiiiis mit Fleisch\", \"nudln mit Ketchup und Fleisch\",[ing1,ing2],4.2,[\"Meat\"]),\r\n            new Recipe(4,\"Salat\",\"green Salat\", \"Salat Gurk und Tomaten vorbereiten und Dressing dazu\",[ing1,ing2],3.7,[\"Vegan\"]),\r\n            new Recipe(5,\"Spagetti\",\"spagettiiiis\", \"nudln mit Ketchup\",[ing1,ing2],4.4,[\"Fish\"])\r\n        ];\r\n    }\r\n\r\n    getRecipes(): Promise<Recipe[]> {\r\n        return Promise.resolve(this.recipes);\r\n    }\r\n\r\n    addRecipe(rid:number, title:string, description:string, preparation:string, ingredients:Ingredient[],categories:string[]) {\r\n        this.recipes.push(new Recipe(rid,title,description,preparation,ingredients,0,categories))\r\n    }\r\n    getRecipe(rid:number): Promise<Recipe>{\r\n        for(let recipe of this.recipes){\r\n            if(recipe.rid == rid){\r\n                return Promise.resolve(recipe);\r\n            }\r\n        }\r\n        return Promise.resolve({});\r\n    }\r\n\r\n    getCategories(): Promise<string[]> {\r\n        return Promise.resolve(this.categories);\r\n    }\r\n    setActiveCategory(category: string){\r\n        this.activeCategory = category;\r\n    }\r\n    getActiveCategory(): Promise<string>{\r\n        return Promise.resolve(this.activeCategory);\r\n    }\r\n\r\n}\r\n"]}