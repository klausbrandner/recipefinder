{"version":3,"sources":["recipes/recipe-list/recipe-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoD,eAAe,CAAC,CAAA;AAEpE,+BAA8B,6BAA6B,CAAC,CAAA;AAQ5D;IAOI,6BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,wCAAU,GAAV;QAAA,iBAKC;QAJG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,OAAO;YAC9C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAA,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAA,CAAC;YACpB,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC;YAC9C,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YAEzB,EAAE,CAAA,CAAC,MAAM,CAAC,CAAA,CAAC;gBACP,GAAG,CAAA,CAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,CAAC;oBAA3B,IAAI,MAAM,SAAA;oBACV,EAAE,CAAA,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAC;wBACvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrC,CAAC;iBACJ;YACL,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;YACvC,CAAC;QACL,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAjCD;QAAC,YAAK,EAAE;;yDAAA;IAPZ;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,4CAA4C;SAC1D,CAAC;;2BAAA;IAsCF,0BAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,2BAAmB,sBAoC/B,CAAA","file":"recipe-list.component.js","sourcesContent":["import { Component, OnInit, Input, OnChanges } from '@angular/core';\n\nimport { RecipeService } from '../../models/recipe-service';\nimport { Recipe } from '../../models/recipe';\n\n@Component({\n  selector: 'recipe-list',\n  templateUrl: './app/recipes/recipe-list/recipe-list.html'\n})\n\nexport class RecipeListComponent implements OnInit, OnChanges {\n\n    @Input() category: string;\n\n    recipes: Recipe[];\n    displayRecipes: Recipe[];\n\n    constructor(private recipeService: RecipeService) { }\n\n    getRecipes(): void {\n        this.recipeService.getRecipes().subscribe((recipes) => {\n            this.recipes = recipes;\n            this.displayRecipes = recipes;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if(changes['category']){\n            let newCat = changes['category'].currentValue;\n            this.displayRecipes = [];\n\n            if(newCat){\n                for(let recipe of this.recipes){\n                    if(recipe.categories.indexOf(newCat) > -1){\n                        this.displayRecipes.push(recipe);\n                    }\n                }\n            }else{\n                this.displayRecipes = this.recipes;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.getRecipes();\n    }\n}\n"]}